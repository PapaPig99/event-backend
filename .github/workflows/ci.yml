name: CI / Build, Push & E2E

on:
  push:
    branches: [ main, feat/** ]
  pull_request:
    branches: [ main ]

jobs:
  build_test:
    name: Build & Unit Test (Gradle)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: event-backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Gradle build (with tests)
        run: ./gradlew clean build --no-daemon

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: event-backend/build/libs/*.jar

  docker_build_push:
    name: Build & Push Docker Image (GHCR)
    needs: build_test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # GHCR ต้องการสิทธิ์นี้
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/event-backend
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ./event-backend
          file: ./event-backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Export image ref
        id: imageref
        run: |
          echo "IMAGE_NAME=$(echo '${{ steps.meta.outputs.tags }}' | head -n1)" >> $GITHUB_OUTPUT

  e2e:
    name: End-to-End Tests (docker compose)
    needs: docker_build_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set backend image variable
        run: |
          echo "BACKEND_IMAGE=${{ needs.docker_build_push.outputs.imageref }}" >> $GITHUB_ENV


      - name: Replace backend image in CI compose
        run: |
          sed -i "s|BACKEND_IMAGE_REPLACED_BY_CI|ghcr.io/${{ github.repository }}/event-backend:sha-${{ github.sha }}|g" docker-compose.ci.yml

      - name: Start stack
        run: docker compose -f docker-compose.ci.yml up -d --build

      - name: Wait for backend health (retry)
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:3137/actuator/health | grep -q '"status":"UP"'; then
              echo "Backend is UP"; exit 0;
            fi
            echo "Waiting backend... ($i)"
            sleep 5
          done
          echo "Backend not ready"; docker compose -f docker-compose.ci.yml logs backend; exit 1

      - name: Smoke test APIs
        run: |
          set -e
          curl -fsS http://localhost:3137/api/events | jq '.[0]?' >/dev/null || (echo "events list failed" && exit 1)
          # ถ้าต้อง login เอา public endpoint ง่าย ๆ ก่อน
          echo "Smoke tests passed"

      - name: Tear down
        if: always()
        run: docker compose -f docker-compose.ci.yml down -v
